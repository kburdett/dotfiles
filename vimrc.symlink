execute pathogen#infect()
execute pathogen#helptags()

if has('autocmd')
  filetype plugin indent on
endif
if has('syntax')
  syntax enable
endif

runtime! macros/matchit.vim



" =========
"  Options
" =========

" editing
set backspace=indent,eol,start
set clipboard=unnamed   "yank to system clipboard by default
set nrformats-=octal
set fileformats-=mac
set autoread

" display
set showmatch
set number
set showcmd
set scrolloff=2
set sidescrolloff=5

" indentation
set autoindent
set shiftround
set smarttab
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" searching
set incsearch
set ignorecase
set smartcase
set hlsearch

" swap and backup
set nobackup
set noswapfile

" error bells
set noerrorbells
set visualbell

" status line
set laststatus=2
set statusline=
set statusline=%t       "tail of the filename
set statusline+=\ [%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=%h      "help file flag
set statusline+=%m      "modified flag
set statusline+=%r      "read only flag
set statusline+=%y      "filetype
set statusline+=%=      "left/right separator
set statusline+=%{fugitive#statusline()}
set statusline+=\ %c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

" misc
set wildmenu
set history=1000
set tabpagemax=50
set nocompatible
set hidden
set viminfo^=!
set ttimeoutlen=200

if !has('win32') && (&termencoding ==# 'utf-8' || &encoding ==# 'utf-8')
	let &listchars="tab:\u21e5 ,trail:\u2423,extends:\u21c9,precedes:\u21c7,nbsp:\u00b7"
else
	set listchars=tab:>-,trail:-,extends:>,precedes:<,nbsp:+
endif



" ==============
"  Key Bindings
" ==============
nnoremap <silent> <Leader>/ :nohlsearch<CR>
nnoremap <Leader>, mqA,<Esc>`q
nnoremap <Leader>; mqA;<Esc>`q
inoremap jk <Esc>

" start new undo on insert mode deletes 
inoremap <C-U> <C-G>u<C-U>
inoremap <C-W> <C-G>u<C-W>

" map entire file text objects
vnoremap ae :<C-U>silent! normal! ggVG<CR>
onoremap ae :<C-U>normal! ggVG<CR>

" cycle command history with completion on c-p/c-n
cnoremap <C-P> <Up> 
cnoremap <C-N> <Down>

" kill the command ex mode key
nnoremap Q <Nop>

" switch between window splits
nnoremap <silent> <C-K> :wincmd k<CR>
nnoremap <silent> <C-J> :wincmd j<CR>
nnoremap <silent> <C-H> :wincmd h<CR>
nnoremap <silent> <C-L> :wincmd l<CR>

" plugin bindings
nnoremap <F5> :GundoToggle<CR>



" ===============
" Custom Commands
" ===============
command! Vimrc edit $MYVIMRC
command! Gvimrc edit $MYGVIMRC
command! Bashp edit ~/.bash_profile
command! Bashrc edit ~/.bashrc
command! PrettyXml % !xmllint % --format
command! PrettyJson % !python -m json.tool

" auto source .vimrc on save
augroup AutoReloadVimRC
	autocmd!
	autocmd BufWritePost $MYVIMRC so $MYVIMRC
	autocmd BufWritePost $MYGVIMRC so $MYGVIMRC
augroup END



" =============
"  Colorscheme
" =============

" Allow color schemes to do bright colors without forcing bold.
if &t_Co == 8 && $TERM !~# '^linux'
  set t_Co=16
endif

if has("gui_running") || &t_Co >= 88
	colorscheme mustang
endif

